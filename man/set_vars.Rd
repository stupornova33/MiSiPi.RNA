% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_vars.R
\name{set_vars}
\alias{set_vars}
\title{Function to process and set the arguments passed by the user for each function}
\usage{
set_vars(
  roi,
  bam_file,
  genome,
  min_read_count = 1,
  plot_output = TRUE,
  path_to_RNAfold,
  pi_pal = c("RdYlBl", "BlYel", "yelOrRed", "MagYel", "Greens"),
  si_pal = c("RdYlBl", "BlYel", "yelOrRed", "MagYel", "Greens"),
  annotate_region = FALSE,
  weight_reads = c("None", "top", "locus_norm", "none", "Top", "Locus_Norm"),
  gtf_file,
  write_fastas = FALSE,
  out_type = c("pdf", "png", "PDF", "PNG")
)
}
\arguments{
\item{roi}{The path to a BED file of loci of interest}

\item{bam_file}{The path to a BAM file}

\item{genome}{The path to a genome Fasta file}

\item{min_read_count}{An integer. Default is 1}

\item{plot_output}{Determines whether the program will output plots as PDFs. Expected input is TRUE or FALSE.}

\item{path_to_RNAfold}{The full path to the RNAfold binary executable.}

\item{pi_pal}{The color palette to use for the piRNA heatmap plot. Valid options are "RdYlBl", "BlYel", "yelOrRed", "MagYel", and "Greens".}

\item{si_pal}{The color palette to use for the siRNA heatmap plot. Valid options are "RdYlBl", "BlYel", "yelOrRed", "MagYel", and "Greens".}

\item{annotate_region}{Determines whether the program will plot genomic features of interest found in the GTF annotation file. If TRUE, a GTF file must be provided as the "gtf_file" argument.}

\item{weight_reads}{Determines whether read counts will be weighted. Valid options are "Top", "locus_norm", or "None". See MiSiPi documentation for descriptions of the weighting methods.}

\item{gtf_file}{a string corresponding to the path of genome annotation in 9-column GTF format. Required if annotate_region is TRUE}

\item{write_fastas}{TRUE or FALSE. Optional. If TRUE, read pairs from functions will be written to file.}

\item{out_type}{The type of file for plots. Options are "png" or "pdf". Default is PDF.}
}
\value{
a list
}
\description{
Function to process and set the arguments passed by the user for each function
}
